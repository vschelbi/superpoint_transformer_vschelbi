defaults:
  - default.yaml

_target_: src.datamodules.s3dis.S3DISDataModule

fold: 5
trainval: True
val_on_test: True

dataloader:
    batch_size: 4

# These parameters are not actually used by the DataModule, but are used
# here to facilitate model parameterization with config interpolation
num_classes: 13
feat_point: 8
feat_segment: 15

# Parameters declared here to facilitate tuning configs without copying
# all the pre_transforms
voxel: 0.05
knn: 25
regularization: [0.07, 0.3, 0.9, 1.8]
spatial_weight: [5e-2, 5e-3, 5e-4, 5e-4]
cutoff: [10, 80, 640, 5120]
w_adjacency: -1
dropout_segment_ratio: [0.4, 0, 0, 0]
#select_feat_point: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]  # use the canonical room position
select_feat_point: [0, 1, 2, 3, 4, 5, 6, 7]

pre_transform:

    - transform: DataTo
      params:
        device: 'cuda'
    - transform: GridSampling3D  # might OOM on CUDA if voxel and GPU memory too small
      params:
        size: ${datamodule.voxel}
        hist_key: 'y'
        hist_size: ${eval:'${datamodule.num_classes} + 1'}
    - transform: KNN
      params:
        k: ${datamodule.knn}
        r_max: 2
        verbose: True
    - transform: DataTo
      params:
        device: 'cpu'
    - transform: GroundElevation
      params:
        threshold: 1.5
        scale: 4.0
    - transform: PointFeatures
      params:
        rgb: True
        hsv: False
        lab: False
        density: False
        linearity: True
        planarity: True
        scattering: True
        verticality: True
        normal: False
        length: False
        surface: False
        volume: False
        curvature: False
        elevation: True
        pos_room: False
        k_min: 1
    - transform: DataTo
      params:
        device: 'cuda'
    - transform: AdjacencyGraph
      params:
        k: 10
        w: ${datamodule.w_adjacency}
    - transform: ConnectIsolated
      params:
        k: 1
    - transform: DataTo
      params:
        device: 'cpu'
    - transform: CutPursuitPartition
      params:
        regularization: ${datamodule.regularization}
        spatial_weight: ${datamodule.spatial_weight}
        k_adjacency: 10
        cutoff: ${datamodule.cutoff}
        iterations: 15
        parallel: True
        verbose: True
    - transform: NAGTo
      params:
        device: 'cuda'
    - transform: NAGAddKeyToX  # save canonical room position 'pos_room' in x. This can be optionally discarded later on in train_transform
      params:
        level: 0
        keys: ['pos_room']
    - transform: SegmentFeatures
      params:
        n_max_node: 32
        n_min: 5
    - transform: EdgeFeatures
      params:
        n_max_edge: 64
        n_min: 5
        max_dist: [3, 10, 30, 100]
    - transform: NAGTo
      params:
        device: 'cpu'

train_transform:
    - transform: NAGRemoveKeys  # remove any features already computed in CutPursuitPartition
      params:
        level: '1+'
        keys: [ 'linearity', 'planarity', 'scattering', 'verticality', 'curvature']
    - transform: NAGAddKeyToX  # adapt datamodule.feat_segment if modified
      params:
        level: '1+'
        keys: ['log_length', 'log_surface', 'log_volume', 'normal', 'log_size']
    - transform: NAGSelectColumns
      params:
        level: '1+'
        key: 'edge_attr'
        idx: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
    - transform: NAGSelectColumns  # adapt datamodule.feat_point if modified
      params:
        level: 0
        key: 'x'
        idx: ${datamodule.select_feat_point}

val_transform: ${datamodule.train_transform}

test_transform: ${datamodule.train_transform}

on_device_train_transform:
    - transform: SampleSegments
      params:
        high: 1
        low: 0
        n_min: 32
        n_max: 128
    - transform: DropoutSegments
      params:
        ratio: ${datamodule.dropout_segment_ratio}
        by_size: False
        by_class: False
    - transform: JitterPosition
      params:
        sigma: 0.03
    - transform: JitterFeatures
      params:
        sigma: 0.01
    - transform: JitterEdgeFeatures
      params:
        sigma: 0.01
    - transform: RandomTiltAndRotate
      params:
        phi: 0.1
        theta: 180
    - transform: RandomAnisotropicScale
      params:
        delta: 0.2
    - transform: RandomAxisFlip
      params:
        p: 0.5
    - transform: NAGColorAutoContrast
      params:
        level: all
        p: 0.5
        x_idx: 0

# Should we actually sample at validation time ?
# Should we do test-time augmentations ?
on_device_val_transform:
    - transform: SampleSegments
      params:
        high: 1
        low: 0
        n_min: 128
        n_max: 256

on_device_test_transform: ${datamodule.on_device_val_transform}